version: '3.8'

services:
  # AWS IoT Greengrass Core running locally
  greengrass-core:
    build: ./docker/greengrass-build
    container_name: greengrass-local
    privileged: true
    volumes:
      # Greengrass root directory
      - greengrass-root:/greengrass/v2
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock
      # Local components
      - ./components:/opt/components:ro
      # Local config
      - ./docker/greengrass/config:/opt/config:ro
      # Shared models directory
      - greengrass-models:/opt/models
      # AWS credentials (if available)
      - ~/.aws:/root/.aws:ro
    environment:
      # Greengrass configuration
      - GGC_ROOT_PATH=/greengrass/v2
      - AWS_REGION=eu-central-1
      # AWS credentials should be provided via ~/.aws/credentials or environment
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - PROVISION=true
      - THING_NAME=EdgeLLMDemo
      - THING_GROUP_NAME=EdgeLLMGroup
      # Local development mode
      - GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH=/greengrass/v2/ipc.socket
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      # Greengrass IPC
      - "8883:8883"
      # Local MQTT broker (built-in)
      - "1883:1883"
      # ChatBot UI
      - "8080:8080"
    networks:
      - greengrass-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Starting Greengrass with AWS IoT Core provisioning...' &&
        /greengrass-entrypoint.sh
      "

  # Component artifact server (serves components locally)
  component-server:
    image: nginx:alpine
    container_name: greengrass-component-server
    volumes:
      - ./components:/usr/share/nginx/html/components:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8090:80"
    networks:
      - greengrass-network
    restart: unless-stopped

networks:
  greengrass-network:
    driver: bridge

volumes:
  greengrass-root:
  greengrass-models: