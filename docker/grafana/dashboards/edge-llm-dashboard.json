{
  "dashboard": {
    "id": null,
    "uid": "edge-llm-sensors",
    "title": "Edge LLM Industrial IoT Dashboard",
    "tags": ["iot", "edge", "llm", "industrial"],
    "timezone": "browser",
    "schemaVersion": 38,
    "version": 1,
    "refresh": "5s",
    "time": {
      "from": "now-1h",
      "to": "now"
    },
    "panels": [
      {
        "id": 1,
        "gridPos": {"h": 8, "w": 8, "x": 0, "y": 0},
        "type": "timeseries",
        "title": "Temperature Sensors",
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r.sensor_type == \"temperature\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "celsius",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"color": "green", "value": null},
                {"color": "yellow", "value": 60},
                {"color": "red", "value": 75}
              ]
            }
          }
        },
        "options": {
          "legend": {
            "displayMode": "visible",
            "placement": "bottom"
          }
        }
      },
      {
        "id": 2,
        "gridPos": {"h": 8, "w": 8, "x": 8, "y": 0},
        "type": "timeseries", 
        "title": "Pressure Sensors",
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r.sensor_type == \"pressure\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "pressurebar",
            "thresholds": {
              "mode": "absolute", 
              "steps": [
                {"color": "green", "value": null},
                {"color": "yellow", "value": 180},
                {"color": "red", "value": 195}
              ]
            }
          }
        }
      },
      {
        "id": 3,
        "gridPos": {"h": 8, "w": 8, "x": 16, "y": 0},
        "type": "timeseries",
        "title": "Vibration Sensors", 
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r.sensor_type == \"vibration\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "velocityms",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"color": "green", "value": null},
                {"color": "yellow", "value": 7},
                {"color": "red", "value": 9}
              ]
            }
          }
        }
      },
      {
        "id": 4,
        "gridPos": {"h": 6, "w": 12, "x": 0, "y": 8},
        "type": "stat",
        "title": "Anomalies Detected (Last Hour)",
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r._field == \"is_anomaly\")\n  |> filter(fn: (r) => r._value == true)\n  |> count()\n  |> yield(name: \"anomaly_count\")"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"color": "green", "value": null},
                {"color": "yellow", "value": 5},
                {"color": "red", "value": 10}
              ]
            },
            "color": {
              "mode": "thresholds"
            }
          }
        },
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "orientation": "auto",
          "reduceOptions": {
            "values": false,
            "fields": "",
            "calcs": ["lastNotNull"]
          }
        }
      },
      {
        "id": 5,
        "gridPos": {"h": 6, "w": 6, "x": 12, "y": 8},
        "type": "gauge",
        "title": "System Health Score",
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> count()\n  |> map(fn: (r) => ({r with _value: if r._value > 100 then 100.0 else float(v: r._value)}))"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "min": 0,
            "max": 100,
            "unit": "percent",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"color": "red", "value": null},
                {"color": "yellow", "value": 30},
                {"color": "green", "value": 70}
              ]
            }
          }
        },
        "options": {
          "orientation": "auto",
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        }
      },
      {
        "id": 6,
        "gridPos": {"h": 6, "w": 6, "x": 18, "y": 8},
        "type": "stat",
        "title": "Active Sensors",
        "datasource": {"uid": "influxdb-uid"},
        "targets": [
          {
            "query": "from(bucket: \"sensors\")\n  |> range(start: -1m)\n  |> filter(fn: (r) => r._measurement == \"sensor_reading\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> group(columns: [\"sensor_id\"])\n  |> count()\n  |> group()\n  |> count()"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "tooltip": false,
                "viz": false,
                "legend": false
              }
            }
          }
        },
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "orientation": "auto"
        }
      }
    ]
  },
  "overwrite": true
}